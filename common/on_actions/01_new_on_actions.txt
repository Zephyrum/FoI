on_siege_lost_country = {
	events = {
		foi_asu.6		
		curia.8
		papacy_events.5
	}
}

on_death_has_harem = {
	if = {
		limit = {
			has_heir = no
			has_reform = rum_government
		}
		country_event = { id = rumi_harem_events.2 }
	}
}

# country
on_startup = {
	if = {
		limit = {
			current_age = age_of_discovery
		}
		LXA = {
			if = {
				limit = {
					NOT = { has_country_flag = lxa_loyalty_flag }
				}
				add_estate_loyalty = {
					estate = estate_church
					loyalty = -10
				}
				set_country_flag = lxa_loyalty_flag
			}
		}
	}
	emperor = {
		save_global_event_target_as = Emperor
	}
	if = {
		limit = {
			is_emperor_of_china = yes
		}
		save_global_event_target_as = EmperorOfChina
	}
	events = {
		muslim_school_events.20 #Pick School
		foi_startup_events.1 #The Chinese hate each other
	}
	if = {
		limit = {
			has_dlc = "Cradle of Civilization"
			has_country_modifier = tur_janissary
		}
		remove_country_modifier = tur_janissary
	}
	initialize_schools_effect = yes #This is only used here but is used for readability of on_action file.

	if = {
		limit = {
			NOT = { has_country_flag = new_flavour_bav_13_has_been_triggered }
			OR = {
				tag = UBV
				tag = LBV
				tag = ING
			}
		}
		set_country_flag = new_flavour_bav_13_has_been_triggered
		country_event = { id = new_flavour_bav.13 days = 90 } #better not to allow almost instant DOWs
	}
	if = {
		limit = {
			tag = FRA
			started_in = 1789.7.14
			NOT = { is_year = 1790 }
			NOT = { has_disaster = french_revolution }
		}
		add_disaster_progress = {
			value = 100
			disaster = french_revolution
		}
	}
	if = {
		limit = {
			exists = SUK
		}
		SUK = {
			set_ruler_flag = suk_monarch_flag
		}
		AYU = {
			set_country_flag = ayu_monarch_flag
		}
	}
}

# country
on_monarch_death = {
	if = {
		limit = {
			tag = ANS
			BRA = {
				has_country_flag = albrecht_achilles_flag
			}
		}
		BRA = {
			clr_country_flag = albrecht_achilles_flag #Just to be sure
			kill_heir = {} #If Albrecht Achilles dies in Ansbach he will also be dead in Brandenburg, will appear as normal death of heir to BRA.
		}
	}
	if = {
		limit = { has_country_modifier = sought_after_bachelor }
		remove_country_modifier = sought_after_bachelor
	}
	if = {
		limit = {
			tag = SAX
			has_country_flag = sax_thuringen_split_to_happen
			OR = {
				NOT = { dynasty = "von Wettin" }
				NOT = { senior_union_with = THU }
				has_regency = yes
			}
		}
		clr_country_flag = sax_thuringen_split_to_happen
	}
	if = {
		limit = { tag = SAM }
		country_event = { id = polynesian.35 }
	}
	if = {
		limit = { tag = TOG }
		country_event = { id = polynesian.36 }
	}
	if = {	# Ascension of Trailokanat	
		limit = { tag = AYU }
		country_event = { id = flavor_suk.1 }		 			
	}
	burgundian_inheritance_start_effect = yes
	ladislaus_postumus_king_died_effect = yes
	if = {
		limit = {
			OR = {
				has_country_flag = no_stab_hit_on_ruler_death
				has_a_primary_cult_selected = yes
			}
			OR = {
				government = tribal
				government = monarchy
			}
		}
		add_stability = 1
	}
	events = {
		#flavor_wal.1 # Vlad the Impaler. So that he doesn't try to usurp his father.
		flavor_nav.4 # Navarra succession event
		flavor_sax.8 # Treaty of Leipzig
		flavor_pap.16 # Borgia Pope
		flavor_pap.19 # death of borgia pope
		flavor_tus.22 # Medici Pope
		flavor_tus.24 # death of the Medici Pope
		majapahit.8 # Majapahit pretenders
		flavor_mal.11 # Mali pretenders
		flavor_mal.47 # Pilgrimage ends prematurely
		foi_yuan.2
		foi_flavor_bul.17
	}
}

# country
# root = winning country, from = loser country
on_war_won = {
	FROM = { country_event = { id = flavor_cri.6 } }
	ROOT = { country_event = { id = tributary_events.32 } }
	
	if = {
		limit = {
			is_part_of_hre = yes
			FROM  = { is_part_of_hre = yes }
		}
		ROOT = { save_global_event_target_as = hre_winner }
		FROM = { save_global_event_target_as = hre_loser }
		random_known_country = {
			limit = {
				has_reform = free_city
				NOT = {
					prestige = 40
				}
				NOT = {
					has_country_modifier = fc_treatyconference_timer
				}
			}
			add_country_modifier = {
				name = fc_treatyconference_timer
				duration = 3650
				hidden = yes
			}
			country_event = {
				id = free_cities.7
				days = 7
			}
		}
	}

	if = {
		limit = {
			tag = MLO
			NOT = { has_country_flag = emp_mlo_won_war_with_swiss_mercs }
			any_hired_mercenary_company = {
				home_province = {
					OR = {
						area = switzerland_area
						area = romandie_area
					}
				}
			}
		}
		set_country_flag = emp_mlo_won_war_with_swiss_mercs
	}
	
	if = {
		limit = {
			is_hiring_condottiere_from = SWI
		}
		SWI = { set_country_flag = won_condottiere_war }
		if = {
			limit = {
				tag = PAP
			}
			SWI = {
				set_country_flag = hired_to_pope
			}
		}
	}
	
	if = {
		limit = {
			primary_culture = melanesian
			NOT = { has_country_modifier = warlord_mod }
		}
		FROM = {
			country_event = {
				id = polynesian.17
			}
		}
	}
	if = {
		limit = {
			ROOT = {
				religion = jewish
				has_church_aspect = judaism_purim_teachings_aspect
			}
		}
		add_church_power = 10
	}
	ROOT = {
		country_event = {
			id = foi_yuan.14
		}
	}
	ROOT = {
		country_event = {
			id = foi_yuan.10
		}
	}
	ROOT = {
		country_event = {
			id = foi_yuan.13
		}
	}
}

on_four_year_pulse_2 = {
	random_events = {
		100 = 0
		10 = sixiang_events.1
		10 = sixiang_events.2
		10 = sixiang_events.3
		10 = sixiang_events.4
		10 = sixiang_events.5
		10 = sixiang_events.6
		10 = sixiang_events.7
		10 = sixiang_events.8
		#10 = sixiang_events.9 Province events cannot use pulse
		10 = sixiang_events.10
	}
	
	random_events = {
		50 = 0
		50 = foi_cum_mission_events.3
	}
}

#Not sure if this one works
on_harmonized_chinese_folk_reformed = { #Sixiang
	events = {
		new_harmonization.1
	}
}

# country random events
on_bi_yearly_pulse = {
	random_events = {
		
		# Nestorian Icon Events
		75 = nestorian_icon_events.1
		75 = nestorian_icon_events.3
		75 = nestorian_icon_events.4
		75 = nestorian_icon_events.5
		75 = nestorian_icon_events.6
		75 = nestorian_icon_events.7
		
		200 = 0
	}
}

on_religion_change = {
	if = {
		limit = {
			religion = tadmunism
			has_country_modifier = son_tadmunism_as_secondary_religion
		}
		remove_country_modifier = son_tadmunism_as_secondary_religion
		every_owned_province = {
			limit = {
				has_province_modifier = son_tadmunism_as_secondary_religion_province
			}
			remove_province_modifier = son_tadmunism_as_secondary_religion_province
		}
	}
}

on_province_religion_converted = {
	if = {
		limit = {
			owner = {
				has_country_modifier = son_tadmunism_as_secondary_religion
			}
			religion = tadmunism
			NOT = { has_province_modifier = son_tadmunism_as_secondary_religion_province }
		}
		add_province_modifier = {
			name = son_tadmunism_as_secondary_religion_province
			duration = -1
			desc = son_tadmunism_as_secondary_religion_province_desc
		}
	}
	else_if = {
		limit = {
			OR = {
				owner = {
					NOT = { has_country_modifier = son_tadmunism_as_secondary_religion }
				}
				NOT = { religion = tadmunism }
			}
			has_province_modifier = son_tadmunism_as_secondary_religion_province
		}
		remove_province_modifier = son_tadmunism_as_secondary_religion_province
	}
}

on_province_owner_change = {
	if = {
		limit = {
			owner = {
				has_country_modifier = son_tadmunism_as_secondary_religion
			}
			religion = tadmunism
			NOT = { has_province_modifier = son_tadmunism_as_secondary_religion_province }
		}
		add_province_modifier = {
			name = son_tadmunism_as_secondary_religion_province
			duration = -1
			desc = son_tadmunism_as_secondary_religion_province_desc
		}
	}
	else_if = {
		limit = {
			OR = {
				owner = {
					NOT = { has_country_modifier = son_tadmunism_as_secondary_religion }
				}
				NOT = { religion = tadmunism }
			}
			has_province_modifier = son_tadmunism_as_secondary_religion_province
		}
		remove_province_modifier = son_tadmunism_as_secondary_religion_province
	}
}